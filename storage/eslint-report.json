[
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/commitlint.config.js",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/eslint.config.js",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/release.config.js",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/__tests__/app-footer.test.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/__tests__/breadcrumbs.test.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/app.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-content.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-footer.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-header.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-logo-icon.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-logo.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-shell.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-sidebar-header.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/app-sidebar.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 150,
                "column": 92,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 150,
                "endColumn": 95,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [7320, 7323], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [7320, 7323], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 181,
                "column": 115,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 181,
                "endColumn": 118,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [9385, 9388], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [9385, 9388], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 235,
                "column": 119,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 235,
                "endColumn": 122,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [13453, 13456], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [13453, 13456], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ]
            }
        ],
        "suppressedMessages": [],
        "errorCount": 3,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { NavFooter } from '@/components/nav-footer';\nimport { NavUser } from '@/components/nav-user';\nimport { Sidebar, SidebarContent, SidebarFooter, SidebarHeader, SidebarGroup, SidebarGroupLabel, SidebarMenu, SidebarMenuButton, SidebarMenuItem, SidebarMenuSub, SidebarMenuSubButton, SidebarMenuSubItem } from '@/components/ui/sidebar';\nimport { generatedMainNavItems } from '@/menu/generated';\nimport { type NavItem } from '@/types';\nimport { Link, usePage } from '@inertiajs/react';\nimport { BookOpen, Folder, History, LayoutGrid, Shield, Users2, ChevronDown, Building2, UserSquare2, Handshake, IdCard, Landmark, Tags } from 'lucide-react';\nimport { Icon } from '@/components/icon';\nimport React from 'react';\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';\nimport AppLogo from './app-logo';\n\nfunction iconColorClass(title: string): string | undefined {\n    return title === 'Dashboard'\n        ? 'text-neutral-700 dark:text-neutral-300'\n        : title === 'Usuarios'\n          ? 'text-sky-600 dark:text-sky-400'\n          : title === 'Roles'\n            ? 'text-indigo-600 dark:text-indigo-400'\n            : title === 'Auditor√≠a'\n              ? 'text-orange-600 dark:text-orange-400'\n              : title === 'Tipos de local'\n                ? 'text-violet-600 dark:text-violet-400'\n                : title === 'Estados de local'\n                  ? 'text-emerald-600 dark:text-emerald-400'\n                  : title === 'Rubros'\n                    ? 'text-fuchsia-600 dark:text-fuchsia-400'\n                    : title === 'Tipos de concesionario'\n                      ? 'text-amber-600 dark:text-amber-400'\n                      : title === 'Tipos de documento'\n                        ? 'text-cyan-600 dark:text-cyan-400'\n                        : title === 'Tipos de contrato'\n                          ? 'text-teal-600 dark:text-teal-400'\n                          : title === 'Estados de contrato'\n                            ? 'text-rose-600 dark:text-rose-400'\n                            : title === 'Tipos de gasto'\n                              ? 'text-lime-600 dark:text-lime-400'\n                              : title === 'C√≥digos de √°rea'\n                                ? 'text-purple-600 dark:text-purple-400'\n                                : title === 'Estados de pago'\n                                  ? 'text-emerald-600 dark:text-emerald-400'\n                                  : title === 'Bancos'\n                                    ? 'text-blue-600 dark:text-blue-400'\n                                    : title === 'Tipos de pago'\n                                      ? 'text-sky-600 dark:text-sky-400'\n                                      : undefined;\n}\n\nfunction useNavGroups(): { core: NavItem[]; admin: NavItem[]; catalogs: NavItem[] } {\n    const page = usePage<{ auth?: { can?: Record<string, boolean> } }>();\n    const can = page.props.auth?.can || {};\n\n    const core: NavItem[] = [{ title: 'Dashboard', url: '/dashboard', icon: LayoutGrid }];\n\n    const admin: NavItem[] = [];\n    if (can['users.view']) admin.push({ title: 'Usuarios', url: '/users', icon: Users2 });\n    if (can['roles.view']) admin.push({ title: 'Roles', url: '/roles', icon: Shield });\n    if (can['auditoria.view']) admin.push({ title: 'Auditor√≠a', url: '/auditoria', icon: History });\n\n    const catalogs: NavItem[] = generatedMainNavItems(can);\n\n    return { core, admin, catalogs };\n}\n\nconst footerNavItems: NavItem[] = [\n    {\n        title: 'Repositorio',\n        url: 'https://github.com/MarcoVegaR/mercach',\n        icon: Folder,\n    },\n    {\n        title: 'Documentaci√≥n',\n        url: 'https://marcovegar.github.io/mercach',\n        icon: BookOpen,\n    },\n];\n\nexport function AppSidebar() {\n    const page = usePage();\n    const { core, admin, catalogs } = useNavGroups();\n    // Define catalog subgroups by titles (fallback 'Otros')\n    const catalogGroupConfigs: Array<{ key: string; title: string; titles: string[] }> = [\n        { key: 'locales', title: 'Locales', titles: ['Tipos de local', 'Estados de local'] },\n        { key: 'concesionarios', title: 'Concesionarios', titles: ['Tipos de concesionario'] },\n        { key: 'contratos', title: 'Contratos', titles: ['Tipos de contrato', 'Estados de contrato', 'Modalidades de contrato'] },\n        { key: 'identificacion', title: 'Identificaci√≥n', titles: ['Tipos de documento', 'C√≥digos de √°rea'] },\n        { key: 'finanzas', title: 'Finanzas', titles: ['Bancos', 'Tipos de pago', 'Estados de pago'] },\n        { key: 'comercio', title: 'Comercio', titles: ['Rubros'] },\n    ];\n    const assigned = new Set<string>();\n    const groupedCatalogs = catalogGroupConfigs\n        .map((cfg) => ({\n            key: cfg.key,\n            title: cfg.title,\n            items: catalogs.filter((it) => {\n                const match = cfg.titles.includes(it.title);\n                if (match) assigned.add(it.title);\n                return match;\n            }),\n        }))\n        .filter((g) => g.items.length > 0);\n    const remaining = catalogs.filter((it) => !assigned.has(it.title));\n    if (remaining.length > 0) {\n        groupedCatalogs.push({ key: 'otros', title: 'Otros', items: remaining });\n    }\n\n    // Persist open state per subgroup in localStorage\n    const [openGroups, setOpenGroups] = React.useState<Record<string, boolean>>(() => {\n        const init: Record<string, boolean> = {};\n        groupedCatalogs.forEach((g) => {\n            const raw = typeof window !== 'undefined' ? window.localStorage.getItem(`nav_group_open_${g.key}`) : null;\n            init[g.key] = raw === null ? true : raw === 'true';\n        });\n        return init;\n    });\n    const setGroupOpen = (key: string, value: boolean) => {\n        setOpenGroups((prev) => ({ ...prev, [key]: value }));\n        if (typeof window !== 'undefined') window.localStorage.setItem(`nav_group_open_${key}`, String(value));\n    };\n    // Persist open state for Administraci√≥n\n    const [openAdmin, setOpenAdmin] = React.useState<boolean>(() => {\n        const raw = typeof window !== 'undefined' ? window.localStorage.getItem('nav_group_open_admin') : null;\n        return raw === null ? true : raw === 'true';\n    });\n    const saveOpenAdmin = (v: boolean) => {\n        setOpenAdmin(v);\n        if (typeof window !== 'undefined') window.localStorage.setItem('nav_group_open_admin', String(v));\n    };\n    return (\n        <Sidebar collapsible=\"icon\" variant=\"inset\">\n            <SidebarHeader>\n                <SidebarMenu>\n                    <SidebarMenuItem>\n                        <SidebarMenuButton size=\"lg\" asChild>\n                            <Link href=\"/\" prefetch>\n                                <AppLogo />\n                            </Link>\n                        </SidebarMenuButton>\n                    </SidebarMenuItem>\n                </SidebarMenu>\n            </SidebarHeader>\n\n            <SidebarContent>\n                {/* Core */}\n                <SidebarGroup className=\"px-2 py-0\">\n                    <SidebarGroupLabel>Inicio</SidebarGroupLabel>\n                    <SidebarMenu>\n                        {core.map((item) => (\n                            <SidebarMenuItem key={item.title}>\n                                <SidebarMenuButton asChild isActive={item.url === (page as any).url}>\n                                    <Link href={item.url} prefetch>\n                                        {item.icon && <Icon iconNode={item.icon} className={`h-5 w-5 ${iconColorClass(item.title) || ''}`} />}\n                                        <span>{item.title}</span>\n                                    </Link>\n                                </SidebarMenuButton>\n                            </SidebarMenuItem>\n                        ))}\n                    </SidebarMenu>\n                </SidebarGroup>\n\n                {/* Administraci√≥n (colapsable) */}\n                {admin.length > 0 && (\n                    <SidebarGroup className=\"px-2 py-0\">\n                        <SidebarGroupLabel>Administraci√≥n</SidebarGroupLabel>\n                        <SidebarMenu>\n                            <SidebarMenuItem>\n                                <Collapsible open={openAdmin} onOpenChange={(v) => saveOpenAdmin(v)}>\n                                    <CollapsibleTrigger asChild>\n                                        <SidebarMenuButton className=\"justify-between\">\n                                            <span className=\"flex items-center gap-2\">\n                                                <Shield className=\"h-4 w-4 text-indigo-600 dark:text-indigo-400\" />\n                                                <span>Administraci√≥n</span>\n                                            </span>\n                                            <ChevronDown className=\"h-4 w-4 transition-transform data-[state=open]:rotate-180\" />\n                                        </SidebarMenuButton>\n                                    </CollapsibleTrigger>\n                                    <CollapsibleContent>\n                                        <SidebarMenuSub>\n                                            {admin.map((item) => (\n                                                <SidebarMenuSubItem key={`admin-${item.title}`}>\n                                                    <SidebarMenuSubButton asChild isActive={item.url === (page as any).url}>\n                                                        <Link href={item.url} prefetch>\n                                                            {item.icon && (\n                                                                <Icon iconNode={item.icon} className={`h-4 w-4 ${iconColorClass(item.title) || ''}`} />\n                                                            )}\n                                                            <span>{item.title}</span>\n                                                        </Link>\n                                                    </SidebarMenuSubButton>\n                                                </SidebarMenuSubItem>\n                                            ))}\n                                        </SidebarMenuSub>\n                                    </CollapsibleContent>\n                                </Collapsible>\n                            </SidebarMenuItem>\n                        </SidebarMenu>\n                    </SidebarGroup>\n                )}\n\n                {/* Cat√°logos (con subgrupos colapsables) */}\n                {groupedCatalogs.length > 0 && (\n                    <SidebarGroup className=\"px-2 py-0\">\n                        <SidebarGroupLabel>Cat√°logos</SidebarGroupLabel>\n                        <SidebarMenu>\n                            {groupedCatalogs.map((group) => {\n                                const iconProps =\n                                    group.key === 'locales'\n                                        ? { icon: Building2, cn: 'text-violet-600 dark:text-violet-400' }\n                                        : group.key === 'concesionarios'\n                                          ? { icon: UserSquare2, cn: 'text-amber-600 dark:text-amber-400' }\n                                          : group.key === 'contratos'\n                                            ? { icon: Handshake, cn: 'text-teal-600 dark:text-teal-400' }\n                                            : group.key === 'identificacion'\n                                              ? { icon: IdCard, cn: 'text-cyan-600 dark:text-cyan-400' }\n                                              : group.key === 'finanzas'\n                                                ? { icon: Landmark, cn: 'text-blue-600 dark:text-blue-400' }\n                                                : group.key === 'comercio'\n                                                  ? { icon: Tags, cn: 'text-fuchsia-600 dark:text-fuchsia-400' }\n                                                  : { icon: Folder, cn: 'text-slate-600 dark:text-slate-400' };\n                                return (\n                                <SidebarMenuItem key={`group-${group.key}`}>\n                                    <Collapsible open={!!openGroups[group.key]} onOpenChange={(v) => setGroupOpen(group.key, v)}>\n                                        <CollapsibleTrigger asChild>\n                                            <SidebarMenuButton className=\"justify-between\">\n                                                <span className=\"flex items-center gap-2\">\n                                                    <Icon iconNode={iconProps.icon} className={`h-4 w-4 ${iconProps.cn}`} />\n                                                    <span>{group.title}</span>\n                                                </span>\n                                                <ChevronDown className=\"h-4 w-4 transition-transform data-[state=open]:rotate-180\" />\n                                            </SidebarMenuButton>\n                                        </CollapsibleTrigger>\n                                        <CollapsibleContent>\n                                            <SidebarMenuSub>\n                                                {group.items.map((item) => (\n                                                    <SidebarMenuSubItem key={`item-${group.key}-${item.title}`}>\n                                                        <SidebarMenuSubButton asChild isActive={item.url === (page as any).url}>\n                                                            <Link href={item.url} prefetch>\n                                                                {item.icon && (\n                                                                    <Icon iconNode={item.icon} className={`h-4 w-4 ${iconColorClass(item.title) || ''}`} />\n                                                                )}\n                                                                <span>{item.title}</span>\n                                                            </Link>\n                                                        </SidebarMenuSubButton>\n                                                    </SidebarMenuSubItem>\n                                                ))}\n                                            </SidebarMenuSub>\n                                        </CollapsibleContent>\n                                    </Collapsible>\n                                </SidebarMenuItem>\n                                );\n                            })}\n                        </SidebarMenu>\n                    </SidebarGroup>\n                )}\n            </SidebarContent>\n\n            <SidebarFooter>\n                <NavFooter items={footerNavItems} className=\"mt-auto\" />\n                <NavUser />\n            </SidebarFooter>\n        </Sidebar>\n    );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/appearance-dropdown.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/appearance-tabs.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/breadcrumbs.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/delete-user.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/dialogs/confirm-alert.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/dialogs/confirm-with-reason-dialog.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/dialogs/export-dialog.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/filters/FilterBadges.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/filters/FilterSheet.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/form/ErrorSummary.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/form/Field.tsx",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 37,
                "column": 71,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 37,
                "endColumn": 74,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1285, 1288], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1285, 1288], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/forms/active-field.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/forms/field-error.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/forms/form-actions.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/forms/form-section.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/forms/form-version.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/heading-small.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/heading.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/icon.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/index/BulkActionBar.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/index/ColumnVisibilityMenu.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/index/DataTable.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/index/SortableHeader.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/index/TableToolbar.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/input-error.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/menus/global-actions-menu.tsx",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 68,
                "column": 65,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 68,
                "endColumn": 68,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2556, 2559], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2556, 2559], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 68,
                "column": 102,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 68,
                "endColumn": 105,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2593, 2596], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2593, 2596], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/menus/row-actions-menu.tsx",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 46,
                "column": 65,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 46,
                "endColumn": 68,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1904, 1907], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1904, 1907], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 46,
                "column": 102,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 46,
                "endColumn": 105,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1941, 1944], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1941, 1944], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/nav-footer.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/nav-main.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/nav-user.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/pickers/role-picker.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/show-base/SectionNav.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/show-base/ShowLayout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/show-base/ShowSection.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/stats-card.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/text-link.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/accordion.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/alert-dialog.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/alert.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/avatar.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/badge.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/breadcrumb.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/button.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/calendar.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/card.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/checkbox.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/collapsible.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/combobox.tsx",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 2,
                "message": "'getLabelFor' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 86,
                "column": 10,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 86,
                "endColumn": 21,
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 128,
                "column": 27,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 128,
                "endColumn": 30,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [3042, 3045], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [3042, 3045], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "react-hooks/exhaustive-deps",
                "severity": 1,
                "message": "React Hook React.useCallback has a missing dependency: 'debug'. Either include it or remove the dependency array.",
                "line": 183,
                "column": 6,
                "nodeType": "ArrayExpression",
                "endLine": 183,
                "endColumn": 71,
                "suggestions": [
                    {
                        "desc": "Update the dependencies array to be: [debug, multiple, selectedValues, onChange, onRemoveChip, closeOnSelect]",
                        "fix": { "range": [4705, 4770], "text": "[debug, multiple, selectedValues, onChange, onRemoveChip, closeOnSelect]" }
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/command.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/date-picker.tsx",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 81,
                "column": 16,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 81,
                "endColumn": 19,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2059, 2062], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2059, 2062], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 84,
                "column": 58,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 84,
                "endColumn": 61,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2220, 2223], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2220, 2223], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 85,
                "column": 45,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 85,
                "endColumn": 48,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2269, 2272], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2269, 2272], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/dialog.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/dropdown-menu.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/icon.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/input-otp.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/input.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/label.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/navigation-menu.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/placeholder-pattern.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/popover.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/scroll-area.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/select.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/separator.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/sheet.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/sidebar.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/skeleton.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/slider.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/sonner.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/switch.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/tabs.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/textarea.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/toggle-group.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/toggle.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/tooltip-simple.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/ui/tooltip.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/user-info.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/components/user-menu-content.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/use-appearance.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/use-initials.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/use-mobile-navigation.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/use-mobile.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/use-show.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/use-unsaved-changes.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/useClientValidation.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/hooks/useFirstErrorFocus.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/app-layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/app/app-header-layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/app/app-sidebar-layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/auth-layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/auth/auth-card-layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/auth/auth-simple-layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/auth/auth-split-layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/layouts/settings/layout.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/breadcrumbs.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/csv-utils.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/delete-service.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/export-from-table.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/export-service.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/table-column-factory.ts",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 6,
                "column": 43,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 6,
                "endColumn": 46,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [269, 272], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [269, 272], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 11,
                "column": 29,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 11,
                "endColumn": 32,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [411, 414], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [411, 414], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 12,
                "column": 23,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 12,
                "endColumn": 26,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [439, 442], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [439, 442], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 15,
                "column": 44,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 15,
                "endColumn": 47,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [592, 595], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [592, 595], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 15,
                "column": 52,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 15,
                "endColumn": 55,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [600, 603], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [600, 603], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 16,
                "column": 32,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 16,
                "endColumn": 35,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [637, 640], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [637, 640], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 16,
                "column": 40,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 16,
                "endColumn": 43,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [645, 648], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [645, 648], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 40,
                "column": 40,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 40,
                "endColumn": 43,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1715, 1718], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1715, 1718], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 40,
                "column": 48,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 40,
                "endColumn": 51,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1723, 1726], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1723, 1726], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 41,
                "column": 28,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 41,
                "endColumn": 31,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1756, 1759], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1756, 1759], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 41,
                "column": 36,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 41,
                "endColumn": 39,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1764, 1767], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1764, 1767], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 42,
                "column": 44,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 42,
                "endColumn": 47,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [1812, 1815], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [1812, 1815], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 63,
                "column": 40,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 63,
                "endColumn": 43,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2704, 2707], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2704, 2707], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 63,
                "column": 48,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 63,
                "endColumn": 51,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2712, 2715], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2712, 2715], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 65,
                "column": 44,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 65,
                "endColumn": 47,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [2802, 2805], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [2802, 2805], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 80,
                "column": 39,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 80,
                "endColumn": 42,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [3253, 3256], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [3253, 3256], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 80,
                "column": 44,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 80,
                "endColumn": 47,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [3258, 3261], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [3258, 3261], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 99,
                "column": 38,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 99,
                "endColumn": 41,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [3885, 3888], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [3885, 3888], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 99,
                "column": 43,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 99,
                "endColumn": 46,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [3890, 3893], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [3890, 3893], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 104,
                "column": 41,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 104,
                "endColumn": 44,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [4044, 4047], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [4044, 4047], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 104,
                "column": 46,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 104,
                "endColumn": 49,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [4049, 4052], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [4049, 4052], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 113,
                "column": 47,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 113,
                "endColumn": 50,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [4396, 4399], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [4396, 4399], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 113,
                "column": 60,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 113,
                "endColumn": 63,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [4409, 4412], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [4409, 4412], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 131,
                "column": 50,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 131,
                "endColumn": 53,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [4947, 4950], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [4947, 4950], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 131,
                "column": 130,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 131,
                "endColumn": 133,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [5027, 5030], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [5027, 5030], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 136,
                "column": 60,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 136,
                "endColumn": 63,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [5254, 5257], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [5254, 5257], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "@typescript-eslint/no-explicit-any",
                "severity": 2,
                "message": "Unexpected any. Specify a different type.",
                "line": 136,
                "column": 82,
                "nodeType": "TSAnyKeyword",
                "messageId": "unexpectedAny",
                "endLine": 136,
                "endColumn": 85,
                "suggestions": [
                    {
                        "messageId": "suggestUnknown",
                        "fix": { "range": [5276, 5279], "text": "unknown" },
                        "desc": "Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."
                    },
                    {
                        "messageId": "suggestNever",
                        "fix": { "range": [5276, 5279], "text": "never" },
                        "desc": "Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/table-column-meta.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/table-ids.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/table-types.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/toast.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/utils.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/validation/schema-role.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/validation/schema-user.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/validation/validation.config.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/lib/validation/zod-kit.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/menu/generated.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/Test/Index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/TestPage.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auditoria/AuditFilters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auditoria/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auditoria/index.tsx",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "react-hooks/exhaustive-deps",
                "severity": 1,
                "message": "React Hook React.useEffect has missing dependencies: 'reloadData' and 'rows'. Either include them or remove the dependency array.",
                "line": 308,
                "column": 8,
                "nodeType": "ArrayExpression",
                "endLine": 308,
                "endColumn": 10,
                "suggestions": [
                    {
                        "desc": "Update the dependencies array to be: [reloadData, rows]",
                        "fix": { "range": [12163, 12165], "text": "[reloadData, rows]" }
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auth/confirm-password.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auth/forgot-password.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auth/login.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auth/register.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auth/reset-password.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auth/two-factor-challenge.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/auth/verify-email.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/bank/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/bank/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/bank/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/bank/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/bank/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Bancos', href: '/catalogs/bank' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Banco: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/bank\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/bank/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/bank/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/bank');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">SWIFT/BIC</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).swift_bic ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/concessionaire-type/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/concessionaire-type/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/concessionaire-type/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/concessionaire-type/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/concessionaire-type/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Tipos de concesionario', href: '/catalogs/concessionaire-type' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Tipo de concesionario: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/concessionaire-type\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/concessionaire-type/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/concessionaire-type/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/concessionaire-type');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-modality/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-modality/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-modality/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-modality/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-modality/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Modalidades de contrato', href: '/catalogs/contract-modality' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Modalidad de contrato: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/contract-modality\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/contract-modality/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/contract-modality/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/contract-modality');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-status/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-status/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-status/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-status/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-status/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Estados de contrato', href: '/catalogs/contract-status' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Estado de contrato: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/contract-status\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/contract-status/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/contract-status/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/contract-status');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-type/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-type/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-type/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-type/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/contract-type/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Tipos de contrato', href: '/catalogs/contract-type' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Tipo de contrato: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/contract-type\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/contract-type/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/contract-type/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/contract-type');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/document-type/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/document-type/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/document-type/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/document-type/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/document-type/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Tipos de documento', href: '/catalogs/document-type' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Tipo de documento: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/document-type\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/document-type/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/document-type/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/document-type');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Mask</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).mask ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/expense-type/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/expense-type/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/expense-type/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/expense-type/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/expense-type/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Tipos de gasto', href: '/catalogs/expense-type' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Tipo de gasto: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/expense-type\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/expense-type/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/expense-type/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/expense-type');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Description</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).description ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-status/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-status/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-status/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-status/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-status/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Estados de local', href: '/catalogs/local-status' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Estado de local: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/local-status\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/local-status/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/local-status/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/local-status');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Description</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).description ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-type/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-type/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-type/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-type/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/local-type/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Tipos de local', href: '/catalogs/local-type' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Tipo de local: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/local-type\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/local-type/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/local-type/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/local-type');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Description</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).description ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-status/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-status/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-status/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-status/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-status/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Estados de pago', href: '/catalogs/payment-status' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Estado de pago: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/payment-status\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/payment-status/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/payment-status/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/payment-status');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-type/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-type/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-type/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-type/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/payment-type/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Tipos de pago', href: '/catalogs/payment-type' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Tipo de pago: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/payment-type\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/payment-type/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/payment-type/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/payment-type');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/phone-area-code/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/phone-area-code/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/phone-area-code/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/phone-area-code/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/phone-area-code/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'C√≥digos de √°rea', href: '/catalogs/phone-area-code' },\n    { title: String(((item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`C√≥digo de √°rea: ${ String(((item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/phone-area-code\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/phone-area-code/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/phone-area-code/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/phone-area-code');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/trade-category/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/trade-category/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/trade-category/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/trade-category/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/catalogs/trade-category/show.tsx",
        "messages": [
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Hash' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 31,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 35
            },
            {
                "ruleId": "@typescript-eslint/no-unused-vars",
                "severity": 1,
                "message": "'Power' is defined but never used. Allowed unused vars must match /^_/u.",
                "line": 10,
                "column": 45,
                "nodeType": null,
                "messageId": "unusedVar",
                "endLine": 10,
                "endColumn": 50
            }
        ],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 2,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "source": "import { ConfirmAlert } from '@/components/dialogs/confirm-alert';\nimport { ShowLayout } from '@/components/show-base/ShowLayout';\nimport { ShowSection } from '@/components/show-base/ShowSection';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport AppLayout from '@/layouts/app-layout';\nimport type { PageProps } from '@inertiajs/core';\nimport { Head, Link, router, usePage } from '@inertiajs/react';\nimport { ArrowLeft, Calendar, Hash, Pencil, Power, Trash2 } from 'lucide-react';\n\ninterface Item {\n  id: number | string;\n  // Dynamic shape depends on module\n  [key: string]: unknown;\n}\n\ninterface ShowProps extends PageProps {\n  item: Item;\n  hasEditRoute?: boolean;\n}\n\nexport default function ShowPage() {\n  const { item, hasEditRoute } = usePage<ShowProps>().props;\n\n  const formatDate = (date?: string | null) => {\n    if (!date) return '‚Äî';\n    try {\n      return new Date(date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' });\n    } catch {\n      return '‚Äî';\n    }\n  };\n\n  const breadcrumbs = [\n    { title: 'Cat√°logos', href: '/catalogs' },\n    { title: 'Rubros', href: '/catalogs/trade-category' },\n    { title: String(((item as any).name ?? (item as any).code ?? (item as any).id)), href: '' },\n  ];\n\n  return (\n    <AppLayout breadcrumbs={breadcrumbs}>\n      <Head title={`Rubro: ${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }`} />\n\n      <ShowLayout\n        header={\n          <div className=\"flex items-center gap-4\">\n            <Link href=\"/catalogs/trade-category\" className=\"text-muted-foreground hover:text-foreground transition-colors\">\n              <ArrowLeft className=\"h-5 w-5\" />\n            </Link>\n            <div>\n              <h1 className=\"text-2xl font-bold tracking-tight\">{ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }</h1>\n            </div>\n          </div>\n        }\n        actions={\n          <div className=\"flex gap-2\">\n            {hasEditRoute && (\n              <Button onClick={() => router.visit(`/catalogs/trade-category/${item.id}/edit`)}>\n                <Pencil className=\"h-4 w-4\" />\n                Editar\n              </Button>\n            )}\n            <ConfirmAlert\n              trigger={\n                <Button variant=\"destructive\" type=\"button\">\n                  <Trash2 className=\"h-4 w-4\" />\n                  Eliminar\n                </Button>\n              }\n              title=\"Eliminar registro\"\n              description={`¬øEst√° seguro de eliminar \"${ String(((item as any).name ?? (item as any).code ?? (item as any).id)) }\"? Esta acci√≥n no se puede deshacer.`}\n              confirmLabel=\"Eliminar\"\n              onConfirm={async () => {\n                await new Promise<void>((resolve, reject) => {\n                  router.delete(`/catalogs/trade-category/${item.id}`, {\n                    preserveState: false,\n                    preserveScroll: true,\n                    onSuccess: () => {\n                      resolve();\n                      router.visit('/catalogs/trade-category');\n                    },\n                    onError: () => reject(new Error('delete_failed')),\n                  });\n                });\n              }}\n            />\n          </div>\n        }\n        aside={\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-base\">Resumen</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <div className=\"flex items-center justify-between\">\n                <span className=\"text-muted-foreground text-sm\">Estado</span>\n                <div className=\"flex items-center gap-2\">\n                  <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                  <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                    {item.is_active ? 'Activo' : 'Inactivo'}\n                  </Badge>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        }\n      >\n        <ShowSection id=\"overview\" title=\"Informaci√≥n B√°sica\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">C√≥digo</dt>\n                  <dd className=\"mt-1 text-sm font-mono\">{String((item as any).code ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Nombre</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).name ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Description</dt>\n                  <dd className=\"mt-1 text-sm\">{String((item as any).description ?? '‚Äî')}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">Estado</dt>\n                  <dd className=\"mt-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className={'h-2 w-2 shrink-0 rounded-full ' + (item.is_active ? 'bg-emerald-500' : 'bg-red-400')} />\n                      <Badge variant={item.is_active ? 'default' : 'destructive'} className=\"font-medium\">\n                        {item.is_active ? 'Activo' : 'Inactivo'}\n                      </Badge>\n                    </div>\n                  </dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n\n        <ShowSection id=\"metadata\" title=\"Metadatos\">\n          <Card>\n            <CardContent className=\"pt-6\">\n              <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    Creado\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.created_at ?? null)}</dd>\n                </div>\n                <div>\n                  <dt className=\"text-muted-foreground text-sm font-medium\">\n                    <Calendar className=\"mr-1 inline h-4 w-4 text-green-500\" />\n                    √öltima actualizaci√≥n\n                  </dt>\n                  <dd className=\"mt-1 text-sm\">{formatDate(item.updated_at ?? null)}</dd>\n                </div>\n              </dl>\n            </CardContent>\n          </Card>\n        </ShowSection>\n      </ShowLayout>\n    </AppLayout>\n  );\n}\n",
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/dashboard.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/errors/403.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/errors/404.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/errors/500.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/roles/RoleFilters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/roles/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/roles/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/roles/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/roles/show.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/settings/appearance.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/settings/password.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/settings/profile.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/settings/security.tsx",
        "messages": [],
        "suppressedMessages": [
            {
                "ruleId": "react-hooks/exhaustive-deps",
                "severity": 1,
                "message": "React Hook useEffect has missing dependencies: 'confirm2FA', 'disable2FA', 'enable2FA', and 'regenerateCodes'. Either include them or remove the dependency array.",
                "line": 174,
                "column": 8,
                "nodeType": "ArrayExpression",
                "endLine": 174,
                "endColumn": 10,
                "suggestions": [
                    {
                        "desc": "Update the dependencies array to be: [confirm2FA, disable2FA, enable2FA, regenerateCodes]",
                        "fix": { "range": [7772, 7774], "text": "[confirm2FA, disable2FA, enable2FA, regenerateCodes]" }
                    }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            },
            {
                "ruleId": "react-hooks/exhaustive-deps",
                "severity": 1,
                "message": "React Hook useEffect has a missing dependency: 'fetchSessions'. Either include it or remove the dependency array.",
                "line": 181,
                "column": 8,
                "nodeType": "ArrayExpression",
                "endLine": 181,
                "endColumn": 10,
                "suggestions": [
                    { "desc": "Update the dependencies array to be: [fetchSessions]", "fix": { "range": [7983, 7985], "text": "[fetchSessions]" } }
                ],
                "suppressions": [{ "kind": "directive", "justification": "" }]
            }
        ],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/users/columns.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/users/create.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/users/edit.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/users/filters.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/users/form.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/users/index.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/users/show.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/pages/welcome.tsx",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/test/setup.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/types/ShowQuery.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/types/index.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/types/tanstack-table.d.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/resources/js/types/vite-env.d.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/vite.config.js",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    },
    {
        "filePath": "/home/marco-vega/Projects/laravel/mercach/vitest.config.ts",
        "messages": [],
        "suppressedMessages": [],
        "errorCount": 0,
        "fatalErrorCount": 0,
        "warningCount": 0,
        "fixableErrorCount": 0,
        "fixableWarningCount": 0,
        "usedDeprecatedRules": []
    }
]
